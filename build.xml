<project default="jar" name="SpellCorrectorBuild">
    <!-- project |-bin |-src |-lib |-out |-build.xml -->
    <property name="lib.dir" value="lib" />
    <property name="src.dir" value="src" />
    <property name="classes.dir" value="bin" />
    <property name="output.dir" value="out" />
    <property name="jarname" value="SpellCorrector.jar" />
    <property name="mainclass" value="main.Run" />

    <path id="lib-classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar" />
        </fileset>
    </path>
    <!-- 1. init -->
    <target name="init">
        <mkdir dir="${classes.dir}" />
        <mkdir dir="${output.dir}" />
    </target>
    <!-- 2. compile -->
    <target name="compile" depends="init">
        <javac srcdir="${src.dir}" destdir="${classes.dir}">
            <compilerarg line="-encoding UTF-8" />
            <classpath refid="lib-classpath" />
        </javac>
    </target>
    <!-- 3. jar -->
    <target name="jar" depends="compile">
        <copy todir="${output.dir}/lib">
            <fileset dir="${lib.dir}" />
        </copy>
        <!--Create a property containing all .jar files, prefix lib/, and seperated with a space-->
        <pathconvert property="mf.classpath" pathsep=" ">
            <mapper>
                <chainedmapper>
                    <flattenmapper/>
                    <!-- add lib/ prefix -->
                    <globmapper from="*" to="lib/*" />
                </chainedmapper>
            </mapper>
            <path refid="lib-classpath" />
        </pathconvert>
        <!-- jar file output path -->
        <jar destfile="${output.dir}/${jarname}" basedir="${classes.dir}">
            <manifest>
                <attribute name="Main-class" value="${mainclass}" />
                <attribute name="Class-Path" value="${mf.classpath}" />
            </manifest>
        </jar>
    </target>
</project>